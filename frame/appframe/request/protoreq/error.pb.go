// Code generated by protoc-gen-go. DO NOT EDIT.
// source: error.proto

/*
Package protoreq is a generated protocol buffer package.

It is generated from these files:

	error.proto

It has these top-level messages:

	ErrCode
*/
package protoreq

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// ErrCode 通用错误定义
type ErrCode struct {
	// 用于响应消息(框架使用的字段, 使用者不用手动设置).
	Seqid int64 `protobuf:"varint,1,opt,name=seqid" json:"seqid,omitempty"`
	// 错误码.
	Code int32 `protobuf:"varint,2,opt,name=code" json:"code,omitempty"`
	// 错误详细消息.
	Msg string `protobuf:"bytes,3,opt,name=msg" json:"msg,omitempty"`
}

func (m *ErrCode) Reset()                    { *m = ErrCode{} }
func (m *ErrCode) String() string            { return proto.CompactTextString(m) }
func (*ErrCode) ProtoMessage()               {}
func (*ErrCode) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ErrCode) GetSeqid() int64 {
	if m != nil {
		return m.Seqid
	}
	return 0
}

func (m *ErrCode) GetCode() int32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *ErrCode) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*ErrCode)(nil), "protoreq.ErrCode")
}

func init() { proto.RegisterFile("error.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 110 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4e, 0x2d, 0x2a, 0xca,
	0x2f, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x45, 0xa9, 0x85, 0x4a, 0xae,
	0x5c, 0xec, 0xae, 0x45, 0x45, 0xce, 0xf9, 0x29, 0xa9, 0x42, 0x22, 0x5c, 0xac, 0xc5, 0xa9, 0x85,
	0x99, 0x29, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0xcc, 0x41, 0x10, 0x8e, 0x90, 0x10, 0x17, 0x4b, 0x72,
	0x7e, 0x4a, 0xaa, 0x04, 0x93, 0x02, 0xa3, 0x06, 0x6b, 0x10, 0x98, 0x2d, 0x24, 0xc0, 0xc5, 0x9c,
	0x5b, 0x9c, 0x2e, 0xc1, 0xac, 0xc0, 0xa8, 0xc1, 0x19, 0x04, 0x62, 0x26, 0xb1, 0x81, 0x0d, 0x34,
	0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x25, 0x06, 0xa4, 0xc9, 0x66, 0x00, 0x00, 0x00,
}
